<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>跟鸟</title>
      <link href="/2022/07/06/gen-niao-du-hou-gan/"/>
      <url>/2022/07/06/gen-niao-du-hou-gan/</url>
      
        <content type="html"><![CDATA[<p> ㅤㅤ《根鸟》这本书并不是说一种鸟，这是一个人的名字。这个名字，代表着一个纯真的世界，代表着属于梦的力量。</p><p> ㅤㅤ在这本书中，梦境与现实，坚持与放弃，真情与假义等许多情感 撞击着，直到最后一刻，真善美胜过了一切丑恶，暗淡的心灵重新被蜡烛照亮。</p><p> ㅤㅤ《根鸟》是一部梦幻般的小说，讲着一个有梦想的孩子，他在梦里见到了那个长满百合花的大峡谷后，便开始了他的人生之路。</p><p> ㅤㅤ根鸟起程了，他的经历无比坎坷。他走过米溪，被骗往鬼谷，他的父亲去世，他独自穿越沙漠。但每次遇到险境，他总能有人出手相助。就这样，他在幸福中遭遇苦难，在苦难中品尝幸福。最后，他终于骑着白马来到了那个长满百合的大峡谷，望着那满地鲜花失声痛哭。</p><p> ㅤㅤ根鸟是幸运的，他找到了那个梦境，那个天堂般的峡谷，百合花静静地开放着，几只白鹰在峡谷里盘旋着，一个美丽的女孩在银杏树下，那是一个比天堂更美也更遥远的地方。</p><p> ㅤㅤ在这旅途中，指引根鸟的，支持根鸟的，召唤根鸟的，是根鸟的梦。梦，是一个目标，一个永恒的目标；梦，是一种信念，一种长久的信念。正是这个目标，这种信念，激励着、支持着根鸟一步一步迈向成功。当根鸟沿着直觉向梦走的时候，他没有怀疑。</p><p> ㅤㅤ根鸟的梦似乎遥遥无期，不可实现，但他却毅然决然地走下去，实现梦就是他的全部。在寻梦的过程中，根鸟奋斗过、放弃过、追求过、绝望过，可他紧紧护住他的梦，不肯服输。梦想是火，它能把一切诱惑、胆怯、彷徨枯草一样烧尽；梦想是风，它能把雪源变绿、干涸润甜。</p><p> ㅤㅤ根鸟是不幸的，却又是幸运的。他的成功，当然少不了板金的谆谆教诲，住持的热情帮助，还有独眼老人、杜家一家人和金枝，是他们让根鸟感到了生活的美好，是爱让世界更美好，是爱使人间充满温馨。</p><p> ㅤㅤ最后，根鸟还是没有找到紫烟。但是，在这段寻梦的旅途中，他收获了人间的爱，人们对他的帮助。即使他没有寻找到梦，但他也获得了许许多多。 </p><p>ㅤㅤ《根鸟》不仅仅教育我们要具备爱心和善心，才能有更多更好的朋友；而且还告诉我们要有坚定的信念，有力的精神支柱是达到彼岸的彩虹桥。正如书中所说，“当一个人拥有自己珍惜的感情，并可以在一切困苦中找回信念，那么他的心里已经存有无人能比的财富，这财富，也可以净化他的灵魂，并且让今后的人生路更平坦和温暖。”</p>]]></content>
      
      
      <categories>
          
          <category> 读后感 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>红与黑</title>
      <link href="/2022/07/06/hong-yu-hei-du-hou-gan/"/>
      <url>/2022/07/06/hong-yu-hei-du-hou-gan/</url>
      
        <content type="html"><![CDATA[<p> ㅤㅤ拆开这个世界的包装盒,想看看里面是什么样子的。 </p><p> ㅤㅤ想知道，红色华丽的背后，究竟藏了多少的黑烟。是馒头里面的染色剂？是奶粉里面的三聚氰胺？还是肉食里面的瘦肉精？</p><p> ㅤㅤ可以想象，在这些人的世界里，是不是他们走在大街上，行色匆匆，为钱为利，一阵狂风猛卷起漫天的钞票，直接遮住了他们的眼睛？</p><p> ㅤㅤ名与利，直接腐蚀着他们的心——直到溃烂，直到无法修补。最多，还剩下一个红色的包装，是要骗谁呢？</p><p> ㅤㅤ为钱为利的心，都有，但是里黑外红的心，那是什么？钱是我们的主人吗？是不是它在我们眼前稍微舞动一下，我们就屈服了？是不是它遮住我们的眼睛，指挥我们走？可它是没有这个权利的。我们的主宰者，是我们自己的心。只有心告诉我们该怎么做，我们才会那样做。可是，心如果坏了，如果臭了，那它就只是一个傀儡了。</p><p> ㅤㅤ我们想要生活在包装纸的外面——因为里面没有光，我们看不清楚，他们也看不清楚。我们需要一大片光来照亮整个世界，让它透过每一个角落——就算是被钞票蒙住了双眼，还是看得见前面的人和路。钞票是迷宫，它想让我们迷路，自然而然地成为它的奴隶，有些人可笑地用一辈子的时间在里面绕圈，而它，只是个看猴戏的。为什么要被它这样玩弄于股掌之中？非要等到进牢房的时候，才恨自己被玩弄了吗？</p><p> ㅤㅤ可是它会负什么责呢？它的戏看够了，至于你的待续的故事，它恐怕没有兴趣想知道。我们是人——是有红色的心的人。我们不是机器——给钱就办事吗？不过，就算是机器，它也是有底线的——给一毛钱能买矿泉水吗？那作为人，自然也是有底线的——为了那一点点儿钱，就会去犯法吗？</p><p> ㅤㅤ心，从外面红到里面——它不是一个烂了的苹果。烂了的苹果，没人敢吃；黑了的心，没人敢碰。谁想要生活在自己的小房间里？一个人抱着一堆钱大笑吗？还是整天和钱说说话呢？说到底，到最后，也只剩下一棺材的钱了——陪着心，慢慢腐烂。</p>]]></content>
      
      
      <categories>
          
          <category> 读后感 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python初步学习指南</title>
      <link href="/2022/07/06/python-chu-bu-xue-xi-zhi-nan/"/>
      <url>/2022/07/06/python-chu-bu-xue-xi-zhi-nan/</url>
      
        <content type="html"><![CDATA[<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><p><a href="https://flowus.cn/f7db1200-9ea5-4d6f-aa3d-111f7842491e">1.注释</a></p><p><a href="https://flowus.cn/a67c4c90-af65-4c7d-abe6-04154afaf609">2.变量</a></p><p><a href="https://flowus.cn/fe90f978-5476-44a7-836a-74574ebd7b8b">3.运算符</a></p><p><a href="https://flowus.cn/1913f3da-e354-49d9-befe-dc645a3c38fe">4.逻辑运算符、控制流程、条件控制</a></p><p><a href="https://flowus.cn/f04ec081-383e-43e7-9a8a-b0dff972270d">4-1.if 嵌套</a></p><p><a href="https://flowus.cn/c0d6c4e6-e6d9-411d-87e3-fec19e585d44">4-2.while循环</a></p><p><a href="https://flowus.cn/9ca6323f-c830-4c88-91b4-575873e5d4e2">4-2-1.while死循环</a></p><p><a href="https://flowus.cn/f506e1df-340e-4379-9b0e-664c82f9c209">4-3.数据类型</a></p><p><a href="https://flowus.cn/f4fff65c-35d6-4241-8e2d-acbf1a9a5273">4-4.数据类型的转换</a></p><h2 id="一、注释"><a href="#一、注释" class="headerlink" title="一、注释"></a>一、注释</h2><p>  注释分为两种分别是 # 和三引号(‘’’，“””)<br>  #是单行注释只能注释一行：</p><p>  三引号(‘’’,“””)是多行注释可以注释多行：</p><h2 id="二、变量"><a href="#二、变量" class="headerlink" title="二、变量"></a>二、变量</h2><p>  变量,可以说是把赋值的值装在一个容器里面一样,但是我们写变量名的时候也得遵循一点规则:<br>  数字字母下划线，数字不能做开头，避免关键字<br>  说的是，变量名是由数字字母和下划线组成的而且数字不可以做开头，变量名也不可以是关键字。<br>  如果没有变量打印可能是这样的：<br>  </p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">print('123')print('123')<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p></p><p>  输出结果:<br>  </p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">123123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p></p><p>  有变量打印是这样的：<br>  </p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">a = 123print(a)print(a)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p></p><p>  输出结果：<br>  </p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">123123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p></p><p>  是不是方便一点点。</p><h2 id="三、运算符"><a href="#三、运算符" class="headerlink" title="三、运算符"></a>三、运算符</h2><p>  python运算符有+加，-减，*乘，/除，//商，%取余，**次幂 加号可以用于字符串的拼接，但是一般不那么用。<br>  以下为if中常用的操作运算符：<br>  程序演示 &gt; 操作符：<br>  </p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">a = 3b = 5# 加print("{}+{}={}".format(a,b,a+b))# 减print("{}-{}={}".format(a,b,a-b))# 乘print("{}×{}={}".format(a,b,a*b))# 除print("{}÷{}={}".format(a,b,a/b))# 商print("{}//{}={}".format(a,b,a//b))# 取余print("{}%{}={}".format(a,b,a%b))# 次幂print("{}**{}={}".format(a,b,a**b))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p></p><h2 id="四、逻辑运算符、控制流程、条件控制"><a href="#四、逻辑运算符、控制流程、条件控制" class="headerlink" title="四、逻辑运算符、控制流程、条件控制"></a>四、逻辑运算符、控制流程、条件控制</h2><p>  逻辑运算符就是and、or和not<br>  and是两个条件都满足为Ture有一个或多个不满足为False ; or是两个条件只要有一个满足为Ture ; not 表示否定，反过来的意思。<br>  以下为if中常用的操作运算符：</p><p>  程序演示 &gt; 操作符:<br>  </p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python"># 使用数字print(1 &gt; 2)# 使用变量x = 2y = 3print(x &gt; y)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p></p><p>  运行结果:<br>  </p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">FalseFalse<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p></p><h3 id="if-嵌套"><a href="#if-嵌套" class="headerlink" title="if 嵌套"></a>if 嵌套</h3><p>  在嵌套if的语句中，可以把if.elif.else结构放在另外一个if.elif.else结构中。<br>  案例：<br>  </p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">khmm='825911'pop = input('输入密码:')if pop == khmm:    print('密码正确')else:    print('密码错误\n    ')    opo = input('请重新输入密码:')    if opo == khmm:        print('密码正确')    else:        print('密码错误\n    ')        no1 = input('请再次输入密码:')        if no1 == khmm:            print('密码正确')        else:            print('密码错误\n    ')<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p></p><p>  运行结果:<br>  </p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">输入密码:123密码错误    请重新输入密码:213密码错误    请再次输入密码:825911密码正确<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p></p><h3 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h3><p>  python中的循环语句有for循环和while循环以下是while循环<br>  python中while循环需要注意冒号和缩进。<br>  案例：<br>  </p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">a = 0while a != 11:    print(a, end=' ')    a += 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p></p><p>  运行结果:<br>  </p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">0 1 2 3 4 5 6 7 8 9 10 <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p></p><h4 id="while死循环"><a href="#while死循环" class="headerlink" title="while死循环"></a>while死循环</h4><p>  while循环因为条件是Ture才会执行下方缩进的内容所以我们只需要直接给他Ture就可以了。<br>  使用方法：<br>  </p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">while Ture:print('xxx')<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p></p><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p>  1、int类型(整型)<br>python里面整数就是整型比如说：1、2、3、-1、-2、-3。<br>  2、float类型(浮点型)<br>浮点型就是小数带小数点的都是浮点型比如：1.2、3.2、3.12、-1.23、-91.12、-1.9。<br>  3、bool类型(布尔型)<br>布尔型只有两个值分别是Ture和False，True代表1而False代表0。</p><h3 id="数据类型的转换"><a href="#数据类型的转换" class="headerlink" title="数据类型的转换"></a>数据类型的转换</h3><p>  1、整型(int类型)<br>int(转换数据)，将括号内的数据转换为int类型，可以转化bool类型，float类型和str类型。<br>  2、浮点型(float类型)<br>float(转换数据)，将括号中的数据转换为float类型，可以转化bool类型，int类型和str类型。<br>  3、布尔类型(bool类型)<br>bool(转换数据)，将括号中的数据转换为bool类型，可以转化float类型，int类型和str类型，float和int类型如果括号内是非零或非空转换结果为Ture如果是零或空结果为False。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
            <tag> 指南 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Alist私有云</title>
      <link href="/2022/07/06/alist-si-you-yun/"/>
      <url>/2022/07/06/alist-si-you-yun/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>java基础</title>
      <link href="/2022/07/02/java-ji-chu/"/>
      <url>/2022/07/02/java-ji-chu/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>视频</title>
      <link href="/2022/07/02/shi-pin/"/>
      <url>/2022/07/02/shi-pin/</url>
      
        <content type="html"><![CDATA[<div style="position: relative;width: 100%;height: 0;padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=214275530&amp;bvid=BV1Aa411E7ZR&amp;cid=728684062&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>简·爱</title>
      <link href="/2022/06/30/jian-ai-du-hou-gan/"/>
      <url>/2022/06/30/jian-ai-du-hou-gan/</url>
      
        <content type="html"><![CDATA[<h6 id="“如果上帝赋予我财富和美貌，我会让你难于离开我，就像我现在难于离开你一样。可上帝没有这样安排。但我们的精神是平等的。就如你我走过坟墓，平等地站在上帝面前。”"><a href="#“如果上帝赋予我财富和美貌，我会让你难于离开我，就像我现在难于离开你一样。可上帝没有这样安排。但我们的精神是平等的。就如你我走过坟墓，平等地站在上帝面前。”" class="headerlink" title="“如果上帝赋予我财富和美貌，我会让你难于离开我，就像我现在难于离开你一样。可上帝没有这样安排。但我们的精神是平等的。就如你我走过坟墓，平等地站在上帝面前。”"></a>“如果上帝赋予我财富和美貌，我会让你难于离开我，就像我现在难于离开你一样。可上帝没有这样安排。但我们的精神是平等的。就如你我走过坟墓，平等地站在上帝面前。”</h6><hr>]]></content>
      
      
      <categories>
          
          <category> 读后感 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
            <tag> 暑假 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
